---
title: "Size vs. Bd modeling: Panam√° preliminary results"
author: Cob Staines
date: 2025-08-20
format:
  html:
    toc: true
df-print: kable
bibliography: references.bib
csl: ecology.csl
---
# Introduction

## Motivation

Patterns of greater Bd load in recently metamorphosed individuals have been documented in some cases[@adams_chytridiomycosis-induced_2020] [@humphries_immune_2022] [@humphries_chytridiomycosis_2024] [@humphries_chytridiomycosis_2025] (and the opposite pattern in others[@bradley_host_2019]), with possible implications for:

  - population dynamics (Q2)
  - assessing Bd resistance/tolerance mechanisms (Q3)
  - resilience trajectory assessment (Q1)

... with the goal of complementing ongoing RIBBiTR research efforts

## Working hypotheses:

  a. Younger individuals are more likely to be infected with Bd than older individuals across species
  b. Younger individuals are more likely to carry higher Bd loads than older individuals across species

# Methods
## Setup
```{r}
#| eval: true
#| output: false
#| code-fold: true
#| code-summary: "Show setup code"

# setup
librarian::shelf(tidyverse, dbplyr, here, janitor, RPostgres, DBI, RIBBiTR-BII/ribbitrrr, brms, loo, bayesplot, tidybayes, ggplot2, ggpattern)

## Connect to DB
dbcon <- hopToDB("ribbitr")

# load populations
data_pop = read.csv(here("data", "sn_site_pop_2025-05-15.csv")) %>%
  rename(population = pop_id) %>%
  mutate(population = ifelse(!is.na(population), paste0(as.character(population), "_pop"), NA_character_))

# table pointers
db_bd = tbl(dbcon, Id("survey_data", "bd_qpcr_results"))
db_sample = tbl(dbcon, Id("survey_data", "sample"))
db_capture = tbl(dbcon, Id("survey_data", "capture"))
db_survey = tbl(dbcon, Id("survey_data", "survey"))
db_visit = tbl(dbcon, Id("survey_data", "visit"))
db_site = tbl(dbcon, Id("survey_data", "site"))
db_region = tbl(dbcon, Id("survey_data", "region"))
db_country = tbl(dbcon, Id("survey_data", "country"))

bd_sample = db_sample %>%
  right_join(db_capture, by = "capture_id") %>%
  left_join(db_survey, by = "survey_id") %>%
  left_join(db_visit, by = "visit_id") %>%
  left_join(db_site, by = "site_id") %>%
  left_join(db_region, by = "region_id") %>%
  left_join(db_country, by = "country_id") %>%
  filter(sample_type == "bd")
```
## Data selection
### Classifying by life stage
These analysis were carried out for post-metamorphic individuals only. Individuals were classified as "adult" or "subadult" (ie. "juvenile") based on field notes.

### Species selection criteria (Brazil):
Species were grouped across regions, years, and seasons, and were included if

  1. at least 14 adult and subadult each per species


```{r}
#| eval: true
#| warning: false
#| code-fold: true
#| code-summary: "Show data collection code"


# identify populations
bd_population = bd_sample %>%
  # filter(!is.na(svl_mm) | !is.na(body_mass_g)) %>%
  filter(country == "brazil",
         life_stage %in% c("adult", "subadult", "juvenile"),
         !is.na(life_stage)) %>%
  mutate(population = region,
         tax_pop = paste0(taxon_capture, "_", population),
         year = year(date),
         life_stage_simple = case_match(life_stage,
                                        "adult" ~ "adult",
                                        c("subadult", "juvenile") ~ "subadult")
         # life_stage_simple = case_when(
         #   # Savage 1972 & Crump 1988
         #   ((taxon_capture == "atelopus_varius") & (svl_mm >= 25)) ~ "adult",
         #   ((taxon_capture == "atelopus_varius") & (svl_mm < 25)) ~ "subadult",
         #   # Lynch and Myers 1983
         #   ((taxon_capture == "craugastor_crassidigitus") & (svl_mm >= 20.2)) ~ "adult",
         #   ((taxon_capture == "craugastor_crassidigitus") & (svl_mm < 20.2)) ~ "subadult",
         #   # Lynch and Myers 1983
         #   ((taxon_capture == "craugastor_fitzingeri") & (svl_mm >= 23.5)) ~ "adult",
         #   ((taxon_capture == "craugastor_fitzingeri") & (svl_mm < 23.5)) ~ "subadult",
         #   # Amphibiaweb
         #   ((taxon_capture == "colostethus_panamansis") & (svl_mm >= 18.8)) ~ "adult",
         #   ((taxon_capture == "colostethus_panamansis") & (svl_mm < 18.8)) ~ "subadult",
         #   # Leenders 2001
         #   ((taxon_capture == "dendrobates_auratus") & (svl_mm >= 25)) ~ "adult",
         #   ((taxon_capture == "dendrobates_auratus") & (svl_mm < 25)) ~ "subadult",
         #   # Amphibiaweb
         #   ((taxon_capture == "espadarana_prosoblepon") & (svl_mm >= 21)) ~ "adult",
         #   ((taxon_capture == "espadarana_prosoblepon") & (svl_mm < 21)) ~ "subadult",
         #   # Basante 2025
         #   ((taxon_capture == "lithobates_warszewitschii") & (svl_mm >= 35)) ~ "adult",
         #   ((taxon_capture == "lithobates_warszewitschii") & (svl_mm < 35)) ~ "subadult",
         #   # Savage 2002
         #   ((taxon_capture == "rhaebo_haematiticus") & (svl_mm >= 42)) ~ "adult",
         #   ((taxon_capture == "rhaebo_haematiticus") & (svl_mm < 42)) ~ "subadult",
         #   # Savage 2002
         #   ((taxon_capture == "sachatamia_albomaculata") & (svl_mm >= 20.5)) ~ "adult",
         #   ((taxon_capture == "sachatamia_albomaculata") & (svl_mm < 20.5)) ~ "subadult",
         #   # Ibunez & Smith 1995
         #   ((taxon_capture == "silverstoneia_flotator") & (svl_mm >= 15.1)) ~ "adult",
         #   ((taxon_capture == "silverstoneia_flotator") & (svl_mm < 15.1)) ~ "subadult",
         #   # Duellman, W. E. 2001
         #   ((taxon_capture == "smilisca_sila") & (svl_mm >= 31.6)) ~ "adult",
         #   ((taxon_capture == "smilisca_sila") & (svl_mm < 31.6)) ~ "subadult",
         #   .default = NA_character_
         # ))
  )


# selection criteria
## - at least 14 each adult and subadult per species

bd_species_valid = bd_population %>%
  group_by(taxon_capture, life_stage_simple) %>%
  summarise(ls_gte_14 = n() >= 14,
            .groups = "drop") %>%
  group_by(taxon_capture) %>%
  filter(sum(as.integer(ls_gte_14)) == 2) %>%
  ungroup() %>%
  select(taxon_capture) %>%
  left_join(bd_population, by = c("taxon_capture")) %>%
  group_by(taxon_capture) %>%
  summarise(count = n(),
            sample_count = n(),
            year_first = min(year),
            year_last = max(year),
            year_count = n_distinct(year),
            .groups = "drop") %>%
  collect()

# join with bd data, select
bd_sample_valid = bd_population %>%
  filter(taxon_capture %in% bd_species_valid$taxon_capture) %>%
  left_join(db_bd %>%
              filter(!is.na(detected)) %>%
              group_by(sample_id) %>%
              summarise(bd_swab_count = n(),
                        bd_detected = any(detected),
                        bd_mean_its1_copies_per_swab = mean(bd_its1_copies_per_swab),
                        .groups = "drop"),
            by = "sample_id") %>%
  select(sample_id,
         bd_swab_count,
         bd_detected,
         bd_mean_its1_copies_per_swab,
         capture_id,
         taxon_capture,
         life_stage,
         life_stage_simple,
         svl_mm,
         body_mass_g,
         sex,
         survey_id,
         start_timestamp_utc,
         date,
         site,
         site_id,
         geographic_area,
         population,
         tax_pop,
         region,
         country) %>%
  collect() %>%
  mutate(month = month(date),
                season = case_match(month,
                                    c(4, 5, 6, 7) ~ "chuvosa",
                                    c(1, 2, 3, 8, 9, 10, 11, 12) ~ "seca",
                                    .default = NA_character_))

bd_model = bd_sample_valid %>%
  filter(!is.na(bd_mean_its1_copies_per_swab),
         season == "seca") %>%
  mutate(bd_load = bd_mean_its1_copies_per_swab,
         # log_bd_load = log(bd_load + 1),
         log_bd_load = log(bd_load),
         bd_load_int = as.integer(bd_load)) %>%
  select(bd_load,
         log_bd_load,
         bd_load_int,
         bd_detected,
         svl_mm,
         site,
         taxon_capture,
         tax_pop,
         life_stage,
         life_stage_simple,
         date,
         season,
         region,
         country)

head(bd_model)
```

## Descriptive stats
```{r}
#| eval: true
#| warning: false
#| code-fold: true
#| code-summary: "Show selected data stats code"

(bd_model_stats = bd_model %>%
  filter(!is.na(season)) %>%
  group_by(taxon_capture, country, season) %>%
  summarise(regions = paste(sort(unique(region)), collapse = ", "),
            site_n = n_distinct(site),
            year_first = year(min(date)),
            year_last = year(max(date)),
            year_count = n_distinct(year(date)),
            adult_n = sum(life_stage_simple == "adult"),
            subadult_n = sum(life_stage_simple == "subadult"),
            .groups = "drop") %>%
  arrange(country,
          taxon_capture))

```

## Modeling
I modeled Bd load using a Baysian zero-inflated log-normal model [@schrock2025fungi] with fixed effects of life stage and season, and considering population as a random effect. The "hurdle" infection probability (hu) and the variability in Bd load (sigma) are allowed to vary with life stage and season. 

```{r}
#| eval: false
#| code-fold: true
#| code-summary: "Show model code"

run_m3_zln = function(taxon, bd_model){
  priors <- c(
    prior(student_t(3, 0, 2.5), class = "b"),
    prior(student_t(3, 0, 2.5), class = "Intercept"),
    prior(exponential(1), class = "sigma"),
    prior(logistic(0, 1), class = "b", dpar = "hu")
  )
  
  # colostethus_panamansis
  m3_zln <- brm(
    formula = bf(
      bd_load ~ 1 + life_stage_simple,
      hu ~ 1 + life_stage_simple,
      sigma ~ 1 + life_stage_simple
    ),
    data = bd_model %>%
      filter(taxon_capture == taxon),
    prior = priors,
    family = hurdle_lognormal(),
    chains = 4,
    iter = 4000,
    warmup = 1000,
    cores = 4,
    control = list(adapt_delta = 0.95, max_treedepth = 12),
    seed = 123
  )
}

# Boana faber
taxon_m = "boana_faber"
output_m = "model_results_zln_life_bofa.rds"
m3_zln = run_m3_zln(taxon_m, bd_model)
saveRDS(m3_zln, file = output_m)

# Ischnocnema henselii
taxon_m = "ischnocnema_henselii"
output_m = "model_results_zln_life_ishe.rds"
m3_zln = run_m3_zln(taxon_m, bd_model)
saveRDS(m3_zln, file = output_m)

# Boana faber
taxon_m = "rhinella_ornata"
output_m = "model_results_zln_life_rhor.rds"
m3_zln = run_m3_zln(taxon_m, bd_model)
saveRDS(m3_zln, file = output_m)

```

## Processing and visualization
```{r}
#| eval: true
#| warning: false
#| code-fold: true
#| code-summary: "Show processing & visualization functions"

extract_abbr <- function(name) {
  parts <- strsplit(name, "_")[[1]]
  genus_abbr <- substr(parts[1], 1, 2)
  species_abbr <- substr(parts[2], 1, 2)
  paste0(genus_abbr, species_abbr)
}

model_taxa_season = bd_model_stats %>%
  select(taxon_capture) %>%
  distinct() %>%
  mutate(prefix = map_chr(taxon_capture, ~extract_abbr(.x)),
         results_file = paste0("model_results_zln_life_", prefix, ".rds"))

load_model = function(id){
  print(model_taxa_season$taxon_capture[id])
  return(readRDS(model_taxa_season$results_file[id]))
}

model_report = function(model_m){
  summary(model_m)
  plot((model_m), ask = FALSE)
  plot(conditional_effects(model_m), ask = FALSE)
  pp_check(model_m) +
    scale_x_log10()
}

samp_pos = function(m_zln, lifestage, season, n, s = 1){
  pp = data.frame(
    life_stage_simple = lifestage,
    season = season,
    population = "NA"
  ) %>%
    slice(rep(1:n(), s))
  
  p_samp = posterior_predict(m_zln,
                             newdata = pp,
                             ndraws = n,
                             allow_new_levels = TRUE)
}

# draws
collect_draws = function(m_spec){
  peace = m_spec %>%
    spread_draws(b_Intercept,
                 b_sigma_Intercept,
                 b_hu_Intercept,
                 b_life_stage_simplesubadult,
                 b_sigma_life_stage_simplesubadult,
                 b_hu_life_stage_simplesubadult) %>%
    mutate(b_adult = b_Intercept,
           b_subadult = b_Intercept + b_life_stage_simplesubadult,
           b_hu_adult = b_hu_Intercept,
           b_hu_subadult = b_hu_Intercept + b_hu_life_stage_simplesubadult,
           b_sigma_adult = b_sigma_Intercept,
           b_sigma_subadult = b_sigma_Intercept + b_sigma_life_stage_simplesubadult) %>%
    select(.draw,
           b_adult,
           b_subadult,
           b_hu_adult,
           b_hu_subadult,
           b_sigma_adult,
           b_sigma_subadult) %>%
    pivot_longer(cols = c(b_adult,
                          b_subadult,
                          b_hu_adult,
                          b_hu_subadult,
                          b_sigma_adult,
                          b_sigma_subadult),
                 values_to = "param") %>% 
    mutate(
      param_name = case_when(
        grepl("b_hu", name) ~ "b_hu",
        grepl("b_sigma", name) ~ "b_sigma",
        grepl("b_", name) ~ "b",
        .default = NA_character_),
      life_stage_simple = case_when(
        grepl("subadult", name) ~ "subadult",
        grepl("adult", name) ~ "adult",
        .default = NA_character_)) %>%
    pivot_wider(id_cols = c(.draw, life_stage_simple),
                values_from = param,
                names_from = param_name) %>%
    mutate(p0 = plogis(b_hu),
           prevalence = 1 - p0,
           season = "seca")
}

density_mat = fugroup_df_savedensity_mat = function(lower, upper, len, draws){
  density_grid = seq(lower, upper, length.out = len)
  
  grouped_draws = draws %>%
    group_by(life_stage_simple) %>%
    group_split()
  
  group_summaries = map(grouped_draws, function(group_df) {
    # Get the group labels
    life_stage = unique(group_df$life_stage_simple)
    
    # Compute density matrices
    pdf_density_mat = pmap(
      list(group_df$b, group_df$b_sigma, group_df$p0),
      function(b, b_sigma, p0) {
        dnorm(density_grid, mean = b, sd = b_sigma) / (p0 + pnorm(density_grid[1]))
      }
    ) %>%
      simplify2array() %>%
      t()
    
    print(sum(is.na(pdf_density_mat)))
    print(sum(is.nan(pdf_density_mat)))
    print(sum(is.na(ccdf_density_mat)))
    print(sum(is.nan(ccdf_density_mat)))
    
    ccdf_density_mat = pmap(
      list(group_df$b, group_df$b_sigma, group_df$p0),
      function(b, b_sigma, p0) {
        (1 - pnorm(density_grid, mean = b, sd = b_sigma)) * (1 - p0)
      }
    ) %>%
      simplify2array() %>%
      t()
    
    
    # Summary statistics:
    pdf_q.5 = apply(pdf_density_mat, 2, quantile, probs = 0.5)
    pdf_q.25 = apply(pdf_density_mat, 2, quantile, probs = 0.25)
    pdf_q.75 = apply(pdf_density_mat, 2, quantile, probs = 0.75)
    
    ccdf_q.5 = apply(ccdf_density_mat, 2, quantile, probs = 0.5)
    ccdf_q.25 = apply(ccdf_density_mat, 2, quantile, probs = 0.25)
    ccdf_q.75 = apply(ccdf_density_mat, 2, quantile, probs = 0.75)
    
    # Return a tidy tibble for plotting or analysis
    tibble(
      life_stage_simple = life_stage,
      density = density_grid,
      pdf_median = pdf_q.5,
      pdf_lower = pdf_q.25,
      pdf_upper = pdf_q.75,
      ccdf_median = ccdf_q.5,
      ccdf_lower = ccdf_q.25,
      ccdf_upper = ccdf_q.75
    )
  })
  
  summary_df <- bind_rows(group_summaries)
}

wilson_ci = function(p_hat, n, conf.level = 0.95) {
  z <- qnorm(1 - (1 - conf.level) / 2)
  
  denominator <- 1 + (z^2 / n)
  centre_adjusted_probability <- p_hat + (z^2 / (2 * n))
  adjusted_standard_deviation <- sqrt((p_hat * (1 - p_hat) / n) + (z^2 / (4 * n^2)))
  
  lower_bound <- (centre_adjusted_probability - z * adjusted_standard_deviation) / denominator
  upper_bound <- (centre_adjusted_probability + z * adjusted_standard_deviation) / denominator
  
  return(c(lower_bound = lower_bound, upper_bound = upper_bound))
}

wilson_ci_lower = function(p_hat, n, conf.level = 0.95) {
  ws = wilson_ci(p_hat, n, conf.level)
  return(ws[1])
}

wilson_ci_upper = function(p_hat, n, conf.level = 0.95) {
  ws = wilson_ci(p_hat, n, conf.level)
  return(ws[2])
}

sample_stats = function(pps) {
  pps %>%
    group_by(life_stage_simple,
             season) %>%
    summarise(n = n(),
              n_pos = sum(bd_load > 0),
              bd_prevalence = sum(bd_load > 0) / n(),
              bd_prevalence_ci_lower = wilson_ci_lower(bd_prevalence, n(), 0.95),
              bd_prevalence_ci_upper = wilson_ci_upper(bd_prevalence, n(), 0.95),
              min_log_load_inf = min(log_bd_load[bd_load > 0]),
              q_25_log_load_inf = quantile(log_bd_load[bd_load > 0], probs = 0.25),
              q_50_log_load_inf = quantile(log_bd_load[bd_load > 0], probs = 0.50),
              q_75_log_load_inf = quantile(log_bd_load[bd_load > 0], probs = 0.75),
              max_log_load_inf = max(log_bd_load[bd_load > 0]),
              se = sqrt(bd_prevalence*(1-bd_prevalence)/n),
              .groups = "drop")
}

plot_prev_obs = function(obs_stats, species_name) {
  dodge_width = 0.5  # Adjust width as needed
  
  ggplot(obs_stats, aes(y = bd_prevalence, x = season, color = life_stage_simple, linetype = season)) +
    geom_point(position = position_dodge(width = dodge_width)) +   # dodge points side by side
    geom_errorbar(aes(ymin = bd_prevalence_ci_lower, ymax = bd_prevalence_ci_upper),
                  width = 0.2,
                  position = position_dodge(width = dodge_width)) +  # dodge error bars side by side, same width
    theme_minimal() +
    ggtitle(paste0("Observed prevalence: ", species_name)) +
    xlab("Season") +
    ylab("Bd prevalence [-]\n(with 95% CI)") +
    labs(color = "Life stage") +
    geom_text(aes(label = paste0("n=", n)),
              position = position_dodge(width = dodge_width + 0.5)) +  # dodge text labels similarly
    ylim(0, 1)
}


plot_prev_mod = function(draws_spec, species_name){
  ggplot(draws_spec, aes(prevalence, x = season, color = life_stage_simple, linetype = season)) +
    geom_boxplot(coef = NULL) + 
    theme_minimal() +
    ggtitle(paste0("Modeled prevalence: ", species_name)) +
    xlab("Season") +
    ylab("Bd prevalence [-]") +
    labs(color = "Life stage") +
    ylim(0, 1)
}

plot_load_obs = function(bd_model_spec, obs_stats, species_name){
  ggplot(bd_model_spec %>%
           filter(bd_load > 0), aes(log_bd_load, x = season, color = life_stage_simple, linetype = season)) +
    geom_boxplot() + 
    theme_minimal() +
    ggtitle(paste0("Observed Bd-positive load: ", spec_name)) +
    xlab("Season") +
    ylab("log(Bd load) [-]") +
    labs(color = "Life stage") +
    geom_text(
      data = obs_stats,
      aes(
        x = season,
        y = q_50_log_load_inf,
        label = paste0("n=", n_pos),
        group = life_stage_simple
      ),
      position = position_dodge(width = .75),
      vjust = -0.25
    ) +
    ylim(log(0.3), 15)
}

plot_load_mod = function(draws_spec, species_name) {
  ggplot(draws_spec, aes(b, x = season, color = life_stage_simple, linetype = season)) +
    geom_boxplot() + 
    theme_minimal() +
    ggtitle(paste0("Modeled Bd-positive load: ", species_name)) +
    xlab("Season") +
    ylab("log(Bd load) [-]") +
    labs(color = "Life stage") +
    ylim(log(0.3), 15)
}

plot_pdf = function(density_mat, species_name) {
  ggplot(density_mat, aes(x = density,
                          y = pdf_median,
                          color = life_stage_simple, 
                          fill = life_stage_simple,
                          linetype = season)) +
    geom_ribbon(aes(ymin = pdf_lower,
                    ymax = pdf_upper), 
                alpha = 0.15,
                color = NA) +
    geom_line() +
    theme_minimal() +
    ggtitle(paste0("PDF of Bd-positive load: ", species_name)) +
    labs(color = "Life stage",
         fill = "Life stage",
         linetype = "Season") +
    xlab("log(Bd load) [-]") +
    ylab("Median probability density [-]\n(with 25th to 75th percentiles)") +
    scale_x_continuous(limits = c(log(0.3), 15), expand = c(0, 0))
}

plot_ccdf = function(density_mat, species_name) {
  ggplot(density_mat, aes(x = density,
                          y = ccdf_median,
                          color = life_stage_simple, 
                          fill = life_stage_simple,
                          linetype = season)) +
    geom_ribbon(aes(ymin = ccdf_lower,
                    ymax = ccdf_upper), 
                alpha = 0.15,
                color = NA) +
    geom_line() +
    theme_minimal() +
    ggtitle(paste0("CCDF of Bd-positive load: ", species_name)) +
    labs(color = "Life stage",
         fill = "Life stage",
         linetype = "Season") +
    xlab("log(Bd load) [-]") +
    ylab("Median complementary cumulative density (1 - CDF) [-]\n(with 25th to 75th percentiles)") +
    scale_x_continuous(limits = c(log(0.3), 15), expand = c(0, 0)) +
    ylim(0, 1)
}

```

# Results
Results are broken out first by species, then combined for comparison between species

## Boana faber
```{r}
#| eval: true
#| warning: false
#| code-fold: true
#| code-summary: "Show Boana faber code"

# boana_faber
spec_name = "Boana faber"

m_zln_bofa = load_model(1)

draws_bofa = collect_draws(m_zln_bofa) %>%
  mutate(taxon_capture = spec_name)

density_mat_bofa = density_mat(log(0.3), 15, 100, draws_bofa) %>%
  mutate(taxon_capture = spec_name)

bd_model_bofa = bd_model %>%
  filter(taxon_capture == "boana_faber")

obs_stats_bofa = sample_stats(bd_model_bofa) %>%
  mutate(src = "obs",
         taxon_capture = spec_name)

# prevalence
## observed prevalence
(plo1_1 = plot_prev_obs(obs_stats_bofa, spec_name))
## modeled prevalence 
(plot_2 = plot_prev_mod(draws_bofa, spec_name))

# only 1 Bd-positive subadult, load abnalysis ignored

# # infected Bd load
# ## observed log load
# (plot_3 = plot_load_obs(bd_model_bofa, obs_stats_bofa, spec_name))
# ## modeled log load
# (plot_4 = plot_load_mod(draws_bofa, spec_name))
# 
# # modeled distributions
# ## pdf
# (plot_5 = plot_pdf(density_mat_bofa, spec_name))
# ## ccdf
# (plot_6 = plot_ccdf(density_mat_bofa, spec_name))

# model_report(m_zln_bofa)
```

## Ischnocnema henselii
```{r}
#| eval: true
#| warning: false
#| code-fold: true
#| code-summary: "Show Ischnocnema henselii code"

# boana_faber
spec_name = "Ischnocnema henselii"

m_zln_ishe = load_model(2)

draws_ishe = collect_draws(m_zln_ishe) %>%
  mutate(taxon_capture = spec_name)

density_mat_ishe = density_mat(log(0.3), 15, 100, draws_ishe) %>%
  mutate(taxon_capture = spec_name)

bd_model_ishe = bd_model %>%
  filter(taxon_capture == "ischnocnema_henselii")

obs_stats_ishe = sample_stats(bd_model_ishe) %>%
  mutate(src = "obs",
         taxon_capture = spec_name)

# prevalence
## observed prevalence
(plo1_1 = plot_prev_obs(obs_stats_ishe, spec_name))
## modeled prevalence 
(plot_2 = plot_prev_mod(draws_ishe, spec_name))

# infected Bd load
## observed log load
(plot_3 = plot_load_obs(bd_model_ishe, obs_stats_ishe, spec_name))
## modeled log load
(plot_4 = plot_load_mod(draws_ishe, spec_name))

# modeled distributions
## pdf
(plot_5 = plot_pdf(density_mat_ishe, spec_name))
## ccdf
(plot_6 = plot_ccdf(density_mat_ishe, spec_name))

# model_report(m_zln_ishe)
```

## Rhinella ornata
```{r}
#| eval: true
#| warning: false
#| code-fold: true
#| code-summary: "Show Rhinella ornata code"

# rhinella_ornata
spec_name = "Rhinella ornata"

m_zln_rhor = load_model(3)

draws_rhor = collect_draws(m_zln_rhor) %>%
  mutate(taxon_capture = spec_name)

density_mat_rhor = density_mat(log(0.3), 15, 100, draws_rhor) %>%
  mutate(taxon_capture = spec_name)

bd_model_rhor = bd_model %>%
  filter(taxon_capture == "rhinella_ornata")

obs_stats_rhor = sample_stats(bd_model_rhor) %>%
  mutate(src = "obs",
         taxon_capture = spec_name)

# prevalence
## observed prevalence
(plo1_1 = plot_prev_obs(obs_stats_rhor, spec_name))
## modeled prevalence 
(plot_2 = plot_prev_mod(draws_rhor, spec_name))

# infected Bd load
## observed log load
(plot_3 = plot_load_obs(bd_model_rhor, obs_stats_rhor, spec_name))
## modeled log load
(plot_4 = plot_load_mod(draws_rhor, spec_name))

# modeled distributions
## pdf
(plot_5 = plot_pdf(density_mat_rhor, spec_name))
## ccdf
(plot_6 = plot_ccdf(density_mat_rhor, spec_name))

# model_report(m_zln_rhor)
```


## Combined results
```{r}
#| eval: true
#| warning: false
#| code-fold: true
#| code-summary: "Show combined results code"
#| fig-width: 12
#| fig-height: 6

# pps_all = bind_rows(pps_atva,
#                     pps_coma,
#                     pps_liwa,
#                     pps_rhha,
#                     pps_saal,
#                     pps_sifl)
# 
# mod_stats_all = bind_rows(mod_stats_atva,
#                           mod_stats_coma,
#                           mod_stats_liwa,
#                           mod_stats_rhha,
#                           mod_stats_saal,
#                           mod_stats_sifl)

obs_stats_all = bind_rows(
  # obs_stats_atva,
  obs_stats_coma,
  obs_stats_liwa,
  obs_stats_rhha,
  obs_stats_saal,
  obs_stats_sifl) %>%
  mutate(label_y = ifelse(life_stage_simple == "adult", 0.95, 0.91))

draws_all = bind_rows(
  # draws_atva,
  draws_coma,
  draws_liwa,
  draws_rhha,
  draws_saal,
  draws_sifl)

density_mat_all = bind_rows(
  # density_mat_atva,
  density_mat_coma,
  density_mat_liwa,
  density_mat_rhha,
  density_mat_saal,
  density_mat_sifl)


bd_model_all = bd_model %>%
  filter(!is.na(season),
         taxon_capture != "atelopus_varius") %>%
  mutate(taxon_capture = str_to_sentence(gsub("_", " ", taxon_capture)))

# observed prevalence
ggplot(obs_stats_all, aes(y = bd_prevalence, x = season, color = life_stage_simple, linetype = season)) +
  geom_point(position = position_dodge(width = 0.5)) +
  geom_errorbar(aes(ymin = bd_prevalence_ci_lower, ymax = bd_prevalence_ci_upper),
                width = 0.2,
                position = position_dodge(width = 0.5)) +
  theme_minimal() +
  ggtitle("Observed prevalence") +
  xlab("Season") +
  ylab("Bd prevalence [-]\n(with 95% CI)") +
  labs(color = "Life stage") +
  geom_text(aes(label = paste0("n=", n),  y = label_y),
          position = position_dodge(width = 0.5)) +
  ylim(0, 1) +
  facet_grid(. ~ taxon_capture)

# model prevalence
ggplot(draws_all, aes(prevalence, x = season, color = life_stage_simple, linetype = season)) +
  geom_boxplot(coef = NULL) + 
  theme_minimal() +
  ggtitle("Modeled prevalence") +
  xlab("Season") +
  ylab("Bd prevalence [-]") +
  labs(color = "Life stage") +
  ylim(0, 1) +
  facet_grid(. ~ taxon_capture)

# obsevation bd load
ggplot(bd_model_all %>%
         filter(bd_load > 0), aes(log_bd_load, x = season, color = life_stage_simple, linetype = season)) +
  geom_boxplot() + 
  theme_minimal() +
  ggtitle("Observed Bd-positive load") +
  xlab("Season") +
  ylab("log(Bd load) [-]") +
  labs(color = "Life stage") +
  geom_text(
    data = obs_stats_all,
    aes(
      x = season,
      y = max(bd_model_all$log_bd_load) * 1.10 * label_y,
      label = paste0("n=", n_pos),
      group = life_stage_simple
    ),
    position = position_dodge(width = 0.75),
    vjust = 0
  ) +
  ylim(log(0.3), 20) +
  facet_grid(. ~ taxon_capture)

# model bd load

ggplot(draws_all, aes(b, x = season, color = life_stage_simple, linetype = season)) +
  geom_boxplot() + 
  theme_minimal() +
  ggtitle("Modeled Bd-positive load") +
  xlab("Season") +
  ylab("log(Bd load) [-]") +
  labs(color = "Life stage") +
  ylim(log(0.3), 20) +
  facet_grid(. ~ taxon_capture)

# PDF -- facet by species
ggplot(density_mat_all, aes(x = density,
                            y = pdf_median,
                            color = life_stage_simple, 
                            fill = life_stage_simple,
                            linetype = season)) +
  geom_ribbon(aes(ymin = pdf_lower,
                  ymax = pdf_upper), 
              alpha = 0.15,
              color = NA) +
  geom_line() +
  theme_minimal() +
  ggtitle("Modeled PDF of Bd-positive load") +
  labs(color = "Life stage",
       fill = "Life stage",
       linetype = "Season") +
  xlab("log(Bd load) [-]") +
  ylab("Median probability density [-]\n(with 25th to 75th percentiles)") +
  scale_x_continuous(limits = c(log(0.3), 15), expand = c(0, 0)) +
  facet_grid(. ~ taxon_capture)

# PDF -- facet by life_stage & season
ggplot(density_mat_all, aes(x = density,
                            y = pdf_median,
                            color = taxon_capture, 
                            fill = taxon_capture)) +
  geom_ribbon(aes(ymin = pdf_lower,
                  ymax = pdf_upper), 
              alpha = 0.15,
              color = NA) +
  geom_line() +
  theme_minimal() +
  ggtitle("Modeled PDF of Bd-positive load") +
  labs(color = "Species",
       fill = "Species") +
  xlab("log(Bd load) [-]") +
  ylab("Median probability density [-]\n(with 25th to 75th percentiles)") +
  scale_x_continuous(limits = c(log(0.3), 15), expand = c(0, 0)) +
  facet_grid(life_stage_simple ~ season)

# CCDF -- facet by species
ggplot(density_mat_all, aes(x = density,
                            y = ccdf_median,
                            color = life_stage_simple, 
                            fill = life_stage_simple,
                            linetype = season)) +
  geom_ribbon(aes(ymin = ccdf_lower,
                  ymax = ccdf_upper), 
              alpha = 0.15,
              color = NA) +
  geom_line() +
  theme_minimal() +
  ggtitle("Modeled CCDF of Bd-positive load") +
  labs(color = "Life stage",
       fill = "Life stage",
       linetype = "Season") +
  xlab("log(Bd load) [-]") +
  ylab("Median complementary cumulative density (1 - CDF) [-]\n(with 25th to 75th percentiles)") +
  scale_x_continuous(limits = c(log(0.3), 15), expand = c(0, 0)) +
  ylim(0, 1) +
  facet_grid(. ~ taxon_capture)

# CCDF -- facet by life_stage & season
ggplot(density_mat_all, aes(x = density,
                            y = ccdf_median,
                            color = taxon_capture, 
                            fill = taxon_capture)) +
  geom_ribbon(aes(ymin = ccdf_lower,
                  ymax = ccdf_upper), 
              alpha = 0.15,
              color = NA) +
  geom_line() +
  theme_minimal() +
  ggtitle("Modeled CCDF of Bd-positive load") +
  labs(color = "Species",
       fill = "Species") +
  xlab("log(Bd load) [-]") +
  ylab("Median complementary cumulative density (1 - CDF) [-]\n(with 25th to 75th percentiles)") +
  scale_x_continuous(limits = c(log(0.3), 15), expand = c(0, 0)) +
  ylim(0, 1) +
  facet_grid(life_stage_simple ~ season)

```

```{r}
# dummy box
```

# Discussion
  - General patterns
    - Most species show greater Bd prevalence & load in juveniles, with Rhaebos showing the opposite pattern
    - Most species show greater Bd prevalence in the wet season, with Rhaebos showing the opposite pattern
    - A variety of relationships are seen for Bd-positive load with season.
  - Bringing in more context (suggestions from Deli)
    - Bled & Blipps, table 3 como guia de factores/caracteristicas entre especies
    - Ana Longo -- sequia aumenta infeccion, accumulacion de ranas alrededor de pozos sube el contacto
    - Jordan Gas ( & Jaime) 2022 - experiemento de aumentar humedad, ver effecto en Bd
 
# Next steps:
  - Explore discrepancies between observations and models
  - Expand analysis to include species which only have data from 1 season
  - Expand analysis to Brazil, Pennsylvania, Sierra Nevada
 