---
title: "Panama Resilience Paper"
author: Cob Staines
date: 2025-10-09
format:
  html:
    toc: true
df-print: kable
---
# Objective

Illustrate differences in Bd prevalence and load across Panamanian species.

## Setup

```{r}
#| eval: true
#| output: false
#| code-fold: true
#| code-summary: "Show setup code"

# setup
librarian::shelf(tidyverse, dbplyr, here, janitor, RPostgres, DBI, RIBBiTR-BII/ribbitrrr, brms, tidybayes, ggplot2)

## Connect to DB
dbcon = hopToDB("ribbitr", hopReg = FALSE)

# table pointers
db_bd = tbl(dbcon, Id("survey_data", "bd_qpcr_results"))
db_sample = tbl(dbcon, Id("survey_data", "sample"))
db_capture = tbl(dbcon, Id("survey_data", "capture"))
db_survey = tbl(dbcon, Id("survey_data", "survey"))
db_visit = tbl(dbcon, Id("survey_data", "visit"))
db_site = tbl(dbcon, Id("survey_data", "site"))
db_region = tbl(dbcon, Id("survey_data", "region"))
db_country = tbl(dbcon, Id("survey_data", "country"))

bd_sample = db_sample %>%
  right_join(db_capture, by = "capture_id") %>%
  left_join(db_survey, by = "survey_id") %>%
  left_join(db_visit, by = "visit_id") %>%
  left_join(db_site, by = "site_id") %>%
  left_join(db_region, by = "region_id") %>%
  left_join(db_country, by = "country_id") %>%
  filter(sample_type == "bd")
```
## Data selection

### Classification by season (maybe, maybe not)
The data were classified into two seasons:

  - **Lluvia (wet)**: May - August
  - **Seca (dry)**: October - January
  
### Species selection criteria:
Species were were included if at least 30 individuals with Bd swabs were present for that species.


```{r}
#| eval: true
#| warning: false
#| code-fold: true
#| code-summary: "Show data collection code"

# define life_stage_simple by SVL
bd_population = bd_sample %>%
  # filter(!is.na(svl_mm) | !is.na(body_mass_g)) %>%
  filter(country == "panama",
         !(life_stage %in% c("eggmass", "tadpole")),
         !is.na(svl_mm)) %>%
  mutate(population = region,
         tax_pop = paste0(taxon_capture, "_", population),
         year = year(date),
         life_stage_simple = case_when(
           # Savage 1972 & Crump 1988
           ((taxon_capture == "atelopus_varius") & (svl_mm >= 25)) ~ "adult",
           ((taxon_capture == "atelopus_varius") & (svl_mm < 25)) ~ "subadult",
           # Lynch and Myers 1983
           ((taxon_capture == "craugastor_crassidigitus") & (svl_mm >= 20.2)) ~ "adult",
           ((taxon_capture == "craugastor_crassidigitus") & (svl_mm < 20.2)) ~ "subadult",
           # Lynch and Myers 1983
           ((taxon_capture == "craugastor_fitzingeri") & (svl_mm >= 23.5)) ~ "adult",
           ((taxon_capture == "craugastor_fitzingeri") & (svl_mm < 23.5)) ~ "subadult",
           # Amphibiaweb
           ((taxon_capture == "colostethus_panamansis") & (svl_mm >= 18.8)) ~ "adult",
           ((taxon_capture == "colostethus_panamansis") & (svl_mm < 18.8)) ~ "subadult",
           # Leenders 2001
           ((taxon_capture == "dendrobates_auratus") & (svl_mm >= 25)) ~ "adult",
           ((taxon_capture == "dendrobates_auratus") & (svl_mm < 25)) ~ "subadult",
           # Amphibiaweb
           ((taxon_capture == "espadarana_prosoblepon") & (svl_mm >= 21)) ~ "adult",
           ((taxon_capture == "espadarana_prosoblepon") & (svl_mm < 21)) ~ "subadult",
           # Basante 2025
           ((taxon_capture == "lithobates_warszewitschii") & (svl_mm >= 35)) ~ "adult",
           ((taxon_capture == "lithobates_warszewitschii") & (svl_mm < 35)) ~ "subadult",
           # Wang 2008
           ((taxon_capture == "pristimantis_ridens") & (svl_mm >= 16)) ~ "adult",
           ((taxon_capture == "pristimantis_ridens") & (svl_mm < 16)) ~ "subadult",
           # Savage 2002
           ((taxon_capture == "rhaebo_haematiticus") & (svl_mm >= 42)) ~ "adult",
           ((taxon_capture == "rhaebo_haematiticus") & (svl_mm < 42)) ~ "subadult",
           # Easteal 1963
           ((taxon_capture == "rhinella_marina") & (svl_mm >= 85)) ~ "adult",
           ((taxon_capture == "rhinella_marina") & (svl_mm < 85)) ~ "subadult",
           # Savage 2002
           ((taxon_capture == "sachatamia_albomaculata") & (svl_mm >= 20.5)) ~ "adult",
           ((taxon_capture == "sachatamia_albomaculata") & (svl_mm < 20.5)) ~ "subadult",
           # Ibunez & Smith 1995
           ((taxon_capture == "silverstoneia_flotator") & (svl_mm >= 15.1)) ~ "adult",
           ((taxon_capture == "silverstoneia_flotator") & (svl_mm < 15.1)) ~ "subadult",
           # Grant & Myers 2013
           ((taxon_capture == "silverstoneia_nubicola") & (svl_mm >= 15.4)) ~ "adult",
           ((taxon_capture == "silverstoneia_nubicola") & (svl_mm < 15.4)) ~ "subadult",
           # Duellman, W. E. 2001
           ((taxon_capture == "smilisca_sila") & (svl_mm >= 31.6)) ~ "adult",
           ((taxon_capture == "smilisca_sila") & (svl_mm < 31.6)) ~ "subadult",
           .default = NA_character_
         ))


# identify valid species & seasons
bd_species_valid = bd_population %>%
  mutate(month = month(date),
         season = case_match(month,
                             c(5, 6, 7, 8) ~ "lluvia",
                             c(10, 11, 12, 1) ~ "seca",
                             .default = NA_character_)) %>%
  filter(!is.na(taxon_capture),
         !is.na(season),
         !is.na(life_stage_simple)) %>%
  group_by(taxon_capture) %>%
  summarise(count = n(),
            .groups = "drop") %>%
  filter(count >= 30) %>%
  arrange(desc(count)) %>%
  collect()

# identify valid samples
bd_sample_valid = bd_population %>%
  mutate(month = month(date),
         season = case_match(month,
                             c(5, 6, 7, 8) ~ "lluvia",
                             c(10, 11, 12, 1) ~ "seca",
                             .default = NA_character_)) %>%
  inner_join(bd_species_valid %>%
               select("taxon_capture"), by = c("taxon_capture"), copy = TRUE) %>%
  inner_join(db_bd %>%
              filter(!is.na(detected)) %>%
              group_by(sample_id) %>%
              slice_sample(n = 1) %>%
              ungroup() %>%
              select(sample_id,
                     detected,
                     bd_its1_copies_per_swab),
            by = "sample_id") %>%
  select(sample_id,
         detected,
         bd_its1_copies_per_swab,
         sample_name,
         capture_id,
         taxon_capture,
         life_stage,
         life_stage_simple,
         svl_mm,
         body_mass_g,
         sex,
         survey_id,
         start_timestamp_utc,
         date,
         season,
         site,
         site_id,
         geographic_area,
         population,
         tax_pop,
         region,
         country) %>%
  collect() %>%
  filter(!(taxon_capture == "silverstoneia_flotator" & svl_mm > 100))
         
# final data selection and cleaning for model
bd_model = bd_sample_valid %>%
  filter(!is.na(bd_its1_copies_per_swab),
         !is.na(svl_mm)) %>%
  rename(bd_load = bd_its1_copies_per_swab,
         bd_detected = detected) %>%
  mutate(log_bd_load = log(bd_load)) %>%
  select(bd_load,
         log_bd_load,
         bd_detected,
         svl_mm,
         site,
         population,
         taxon_capture,
         tax_pop,
         life_stage,
         life_stage_simple,
         date,
         season,
         population,
         region,
         country)

head(bd_model)
```

## Descriptive stats of data
```{r}
#| eval: true
#| warning: false
#| code-fold: true
#| code-summary: "Show selected data stats code"

(bd_model_stats = bd_model %>%
  filter(!is.na(season)) %>%
  group_by(taxon_capture, country, season) %>%
  summarise(regions = paste(sort(unique(region)), collapse = ", "),
            population_n = n_distinct(population),
            site_n = n_distinct(site),
            year_first = year(min(date)),
            year_last = year(max(date)),
            year_count = n_distinct(year(date)),
            adult_n = sum(life_stage_simple == "adult"),
            subadult_n = sum(life_stage_simple == "subadult"),
            .groups = "drop") %>%
  arrange(country,
          taxon_capture))

```
# Process data
```{r}
get_species_name = function(taxon) {
  species_name = str_to_sentence(gsub("_", " ", taxon))
}

wilson_ci = function(p_hat, n, conf.level = 0.95) {
  z <- qnorm(1 - (1 - conf.level) / 2)
  
  denominator <- 1 + (z^2 / n)
  centre_adjusted_probability <- p_hat + (z^2 / (2 * n))
  adjusted_standard_deviation <- sqrt((p_hat * (1 - p_hat) / n) + (z^2 / (4 * n^2)))
  
  lower_bound <- (centre_adjusted_probability - z * adjusted_standard_deviation) / denominator
  upper_bound <- (centre_adjusted_probability + z * adjusted_standard_deviation) / denominator
  
  return(c(lower_bound = lower_bound, upper_bound = upper_bound))
}

wilson_ci_lower = function(p_hat, n, conf.level = 0.95) {
  ws = wilson_ci(p_hat, n, conf.level)
  return(ws[1])
}

wilson_ci_upper = function(p_hat, n, conf.level = 0.95) {
  ws = wilson_ci(p_hat, n, conf.level)
  return(ws[2])
}

sample_stats = function(obs) {
  obs %>%
    group_by(taxon_capture) %>%
    summarise(n = n(),
              n_pos = sum(bd_load > 0),
              bd_prevalence = sum(bd_load > 0) / n(),
              bd_prevalence_ci_lower = wilson_ci_lower(bd_prevalence, n(), 0.95),
              bd_prevalence_ci_upper = wilson_ci_upper(bd_prevalence, n(), 0.95),
              min_log_load_inf = min(log_bd_load[bd_load > 0]),
              q_25_log_load_inf = quantile(log_bd_load[bd_load > 0], probs = 0.25),
              q_50_log_load_inf = quantile(log_bd_load[bd_load > 0], probs = 0.50),
              q_75_log_load_inf = quantile(log_bd_load[bd_load > 0], probs = 0.75),
              max_log_load_inf = max(log_bd_load[bd_load > 0]),
              se = sqrt(bd_prevalence*(1-bd_prevalence)/n),
              .groups = "drop")
}


obs_stats_all = sample_stats(bd_model) %>%
  mutate(taxon_capture = get_species_name(taxon_capture))

ccdf_zeros = obs_stats_all %>%
  select(taxon_capture) %>%
  distinct() %>%
  mutate(log_bd_load = 20,
         ccdf = 0)

ccdf_all = bd_model %>%
  mutate(taxon_capture = get_species_name(taxon_capture),
         density = 1) %>%
  arrange(taxon_capture, desc(log_bd_load)) %>%
  group_by(taxon_capture) %>%
  mutate(n = n(),
         p = cumsum(density)) %>%
  ungroup() %>%
  group_by(taxon_capture, bd_detected)

ccdf_extended <- ccdf_all %>%
  filter(!(bd_detected == FALSE) | row_number() == 1) %>%
  ungroup() %>%
  mutate(p = if_else(log_bd_load == -Inf, p - 1, p),
         log_bd_load = if_else(log_bd_load == -Inf, log(0.3), log_bd_load),
         ccdf = p / n) %>%
  bind_rows(ccdf_zeros) %>%
  arrange(taxon_capture, desc(log_bd_load)) %>%
  group_by(taxon_capture) %>%
  mutate(
    ksmooth_result = list(ksmooth(x = log_bd_load,
                                  y = ccdf,
                                  x.points = log_bd_load,
                                  kernel = "normal",
                                  bandwidth = 1)),
    ccdf_x = ksmooth_result[[1]]$x,
    ccdf_y = ksmooth_result[[1]]$y
  ) %>%
  ungroup() %>%
  select(-ksmooth_result)
  
```


# Visualize data
```{r}
#| fig-width: 12
#| fig-height: 6

plot_prev = ggplot(obs_stats_all, aes(y = bd_prevalence, x = taxon_capture, color = taxon_capture)) +
  geom_point(position = position_dodge(width = 0.5)) +
  geom_errorbar(aes(ymin = bd_prevalence_ci_lower, ymax = bd_prevalence_ci_upper),
                width = 0.2,
                position = position_dodge(width = 0.5)) +
  theme_minimal() +
  ggtitle("Observed prevalence") +
  xlab("Species") +
  ylab("Bd prevalence [-]\n(with 95% CI)") +
  geom_text(aes(label = paste0("n=", n),  color = taxon_capture, y = 1),
          position = position_dodge(width = 0.5)) +
  ylim(0, 1) +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(legend.position = "none")

ggsave(filename = here("pa_resilience_paper_files", "pa_bd_prev.png"),
       plot = plot_prev,
       height = 6,
       width = 12)


plot_load = ggplot(bd_model %>%
         mutate(taxon_capture = get_species_name(taxon_capture)) %>%
         filter(bd_load > 0), aes(log_bd_load, x = taxon_capture, color = taxon_capture)) +
  geom_boxplot() + 
  theme_minimal() +
  ggtitle("Observed Bd-positive load") +
  xlab("Species") +
  ylab("log(Bd load) [-]") +
  geom_text(
    data = obs_stats_all,
    aes(
      x = taxon_capture,
      y = max(bd_model$log_bd_load) * 1.05,
      label = paste0("n=", n_pos)
    ),
    position = position_dodge(width = 0.75),
    vjust = 0
  ) +
  ylim(log(0.3), 20) +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
  theme(legend.position = "none")

ggsave(filename = here("pa_resilience_paper_files", "pa_bd_load.png"),
       plot = plot_load,
       height = 6,
       width = 12)

plot_ccdf = ggplot(ccdf_extended, aes(x = ccdf_x,
                          y = ccdf_y,
                          color = taxon_capture)) +
  geom_line() +
  theme_minimal() +
  ggtitle("Modeled CCDF of Bd-positive load") +
  labs(color = "Species",
       fill = "Species") +
  xlab("log(Bd load) [-]") +
  ylab("Complementary cumulative density (1 - CDF) [-]") +
  scale_x_continuous(limits = c(log(0.3), 20), expand = c(0, 0)) +
  ylim(0, 1)

ggsave(filename = here("pa_resilience_paper_files", "pa_bd_ccdf_smooth.png"),
       plot = plot_ccdf,
       height = 6,
       width = 12)

plot_prev
plot_load
plot_ccdf

```
